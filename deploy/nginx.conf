# /etc/nginx/sites-available/f152z
# Конфигурация Nginx для проксирования HTTPS-трафика на Gunicorn через TCP-порт
# --- Блок 1: Перенаправление с HTTP на HTTPS ---
# Этот блок будет "ловить" все попытки зайти на сайт по незащищенному http://
# и автоматически перенаправлять их на защищенный https://
server {
    listen 80;
    server_name fz152.dprgek.loc; # Указываем и доменное имя, и IP
    # Отправляем 301 редирект на тот же хост и URI, но с протоколом https и портом 8443
    return 301 https://$host:8443$request_uri;
}
# --- Блок 2: Основной сервер, работающий по HTTPS ---
server {
    # Nginx слушает на порту 8443 и использует SSL
    listen 8443 ssl;
    server_name fz152.dprgek.loc;

    # --- Настройки SSL ---
    # Пути к вашим SSL-сертификатам (убедитесь, что они лежат в /var/www/f152z/)
    ssl_certificate /var/www/f152z/fz152.crt;
    ssl_certificate_key /var/www/f152z/fz152.key;
    # Рекомендуемые настройки SSL для повышения безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    # --- Обслуживание статических файлов ---
    # Все запросы, начинающиеся с /static/, Nginx будет отдавать напрямую из папки,
    # не нагружая Gunicorn. Это значительно ускоряет загрузку JS, CSS и т.д.
    location /static {
        alias /var/www/f152z/static;
    }

    # --- Проксирование на Gunicorn ---
    # Все остальные запросы (на /, /results, /api/save_results и т.д.) 
    # будут переданы нашему приложению, работающему под Gunicorn
    location / {
        # Заголовки, необходимые для того, чтобы Flask "видел" реальные данные о запросе,
        # а не только то, что запрос пришел от Nginx с адреса 127.0.0.1
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Forwarded-Port $server_port;       
        proxy_pass http://127.0.0.1:5000;
    }
}
