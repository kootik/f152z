/**
 * main.js
 * Application orchestrator with secure event handling.
 */

import { settings, updateSettings, selectedForComparison, currentPageResults, currentPage, setResultsPerPage } from './state.js';
import apiClient from './api.js';
import * as ui from './ui.js';
import * as analysis from './analysis.js';

// =============================================================================
// APPLICATION INITIALIZATION
// =============================================================================

document.addEventListener('DOMContentLoaded', () => {
    console.log("‚ñ∂Ô∏è DOMContentLoaded: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è v3.0...");
    
    loadSettings();
    initializeAppUI();
    initializeEventListeners();
    
    apiClient.loadInitialData(1);
    console.log("‚úÖ DOMContentLoaded: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
});

function loadSettings() {
    const saved = localStorage.getItem('analysisSettings');
    if (saved) {
        try {
            updateSettings(JSON.parse(saved));
            console.log("...–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage.");
        } catch (e) {
            console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", e);
        }
    }
}

function initializeAppUI() {
    const savedTheme = localStorage.getItem('theme');
    const themeToggle = document.getElementById('themeToggle');
    if (savedTheme === 'dark' && themeToggle) {
        document.documentElement.setAttribute('data-theme', 'dark');
        themeToggle.textContent = '‚òÄÔ∏è';
    }
    const isCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
    if(isCollapsed) {
        const sidebar = document.getElementById('sidebar');
        if (sidebar) sidebar.classList.add('collapsed');
    }
    console.log("...–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—Ç–µ–º–∞, —Å–∞–π–¥–±–∞—Ä).");
}

// =============================================================================
// EVENT LISTENERS (Event Delegation for Dynamic Content)
// =============================================================================

function initializeEventListeners() {
    console.log("‚öôÔ∏è –ó–∞–ø—É—Å–∫ initializeEventListeners.");

    // --- –ù–ê–í–ò–ì–ê–¶–ò–Ø –í –ë–û–ö–û–í–û–ô –ü–ê–ù–ï–õ–ò ---
    document.querySelectorAll('.nav-item').forEach(item => {
        item.addEventListener('click', (e) => {
            e.preventDefault();
            ui.switchView(item.dataset.view);
        });
    });

    // --- –í–ï–†–•–ù–Ø–Ø –ü–ê–ù–ï–õ–¨ (–ö–ù–û–ü–ö–ò –ú–ï–ù–Æ, –¢–ï–ú–´, –£–í–ï–î–û–ú–õ–ï–ù–ò–ô) ---
    const menuToggle = document.getElementById('menuToggle');
    if (menuToggle) {
        menuToggle.addEventListener('click', () => {
            const sidebar = document.getElementById('sidebar');
            if(sidebar) {
                sidebar.classList.toggle('collapsed');
                localStorage.setItem('sidebarCollapsed', sidebar.classList.contains('collapsed'));
            }
        });
    }

    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
        themeToggle.addEventListener('click', function() {
            const newTheme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', newTheme);
            this.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
            localStorage.setItem('theme', newTheme);
        });
    }

    const notificationBtn = document.getElementById('notificationBtn');
    if (notificationBtn) {
        notificationBtn.addEventListener('click', () => {
            const panel = document.getElementById('notificationsPanel');
            const badge = document.getElementById('notificationBadge');
            if (panel) panel.classList.toggle('active');
            if (badge) {
                badge.style.display = 'none';
                badge.textContent = '0';
            }
        });
    }

    // --- –ì–õ–ê–í–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ò–ö–û–í –ù–ê –í–°–ï–ô –°–¢–†–ê–ù–ò–¶–ï ---
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
    document.body.addEventListener('click', (e) => {
        const target = e.target;

        // --- 1. –õ–û–ì–ò–ö–ê –í–´–ü–ê–î–ê–Æ–©–ï–ì–û –°–ü–ò–°–ö–ê (Dropdown) ---
        const dropdownToggle = target.closest('#loadOptionsToggle');
        const dropdownItem = target.closest('.dropdown-item');
        const isClickInsideDropdown = target.closest('.load-options-dropdown');

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
        if (!isClickInsideDropdown) {
            const menu = document.getElementById('loadOptionsMenu');
            if (menu?.classList.contains('active')) {
                menu.classList.remove('active');
                document.getElementById('loadOptionsToggle')?.classList.remove('active');
            }
        }
        
        if (dropdownToggle) { // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è
            const menu = document.getElementById('loadOptionsMenu');
            dropdownToggle.classList.toggle('active');
            menu.classList.toggle('active');
            return; // –î–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        }
        
        if (dropdownItem) { // –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –≤ —Å–ø–∏—Å–∫–µ
            e.preventDefault();
            const count = dropdownItem.dataset.count;
            document.getElementById('selectedValue').textContent = count === 'all' ? '–í—Å–µ' : count;
            setResultsPerPage(count);
            apiClient.loadInitialData(1);
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
            const menu = document.getElementById('loadOptionsMenu');
            const toggle = document.getElementById('loadOptionsToggle');
            menu?.classList.remove('active');
            toggle?.classList.remove('active');
            return; // –î–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        }
        
        // --- 2. –ì–õ–û–ë–ê–õ–¨–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø (–ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω) ---
        if (target.classList.contains('modal')) {
            target.style.display = 'none';
            return;
        }
        if (target.closest('.close-btn')) {
            target.closest('.modal').style.display = 'none';
            return;
        }

        // --- 3. –ö–ù–û–ü–ö–ò –ù–ê –ü–ê–ù–ï–õ–ò –§–ò–õ–¨–¢–†–û–í –ò –ê–ù–ê–õ–ò–ó–ê ---
        const actionButton = target.closest('.btn, .preset-btn');
        if (actionButton) {
            if (actionButton.id === 'analyzeFingerprintBtn') analysis.analyzeFingerprints();
            else if (actionButton.id === 'analyzeFocusBtn') ui.displayAnomalyReport('violations');
            else if (actionButton.id === 'detailedAnalysisBtn') runDetailedAnalysis();
            else if (actionButton.id === 'saveSettingsBtn') ui.saveSettings();
            else if (actionButton.id === 'resetFiltersBtn') ui.resetFilters();
            else if (actionButton.id === 'exportBtn') ui.openExportModal();
            else if (actionButton.matches('.preset-btn')) {
                document.querySelectorAll('.preset-btn').forEach(btn => btn.classList.remove('active'));
                actionButton.classList.add('active');
                ui.applyPresetFilter(actionButton.dataset.preset);
            }
            return; // –î–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        }

        // --- 4. –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø –° –¢–ê–ë–õ–ò–¶–ê–ú–ò (–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞, —Å—Å—ã–ª–∫–∏, –ø–∞–≥–∏–Ω–∞—Ü–∏—è) ---
        const tableHeader = target.closest('.data-table thead th[data-sort]');
        if (tableHeader) {
            const sortKey = tableHeader.dataset.sort;
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–ª—è –∫–∞–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤—ã–∑–≤–∞–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            if (target.closest('#results-container')) {
                ui.sortAndRerenderMainResults(sortKey);
            } else if (target.closest('#abandoned-sessions-container')) {
                ui.sortAndRerenderAbandoned(sortKey);
            }
            return; // –î–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        }
        // –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –≤ main.js

		const analysisBtn = target.closest('.single-analysis-btn');
		if (analysisBtn) {
			e.preventDefault();
			const sessionId = analysisBtn.dataset.sessionId;
			if (sessionId) {
				// –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–±–æ—Ä –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				selectedForComparison.clear();
				selectedForComparison.add(sessionId);

				// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∏–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
				ui.switchView('comparison');

				// –°—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
				// –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã view —É—Å–ø–µ–ª –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è
				setTimeout(() => runDetailedAnalysis(), 50);
			}
			return; // –î–µ–π—Å—Ç–≤–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
		}
        const pageButton = target.closest('.page-btn');
        if (pageButton && !pageButton.disabled) {
            apiClient.loadInitialData(parseInt(pageButton.dataset.page, 10));
            return;
        }

        const profileLink = target.closest('.user-profile-link');
        if (profileLink) {
            e.preventDefault();
            ui.openUserProfile(profileLink.dataset.lastname, profileLink.dataset.firstname);
            return;
        }

        const logLink = target.closest('.event-log-link');
        if (logLink) {
            e.preventDefault();
            apiClient.showEventLog(logLink.dataset.sessionId);
            return;
        }

        // --- 5. –î–ï–ô–°–¢–í–ò–Ø –ù–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –°–¢–†–ê–ù–ò–¶–ê–• (Views) ---
        const abandonedFilterBtn = target.closest('#abandoned-filters .filter-btn');
        if (abandonedFilterBtn) {
            document.querySelector('#abandoned-filters .filter-btn.active')?.classList.remove('active');
            abandonedFilterBtn.classList.add('active');
            ui.renderAbandonedSessions(abandonedFilterBtn.dataset.filter);
            return;
        }
        
        const comparisonCard = target.closest('.comparison-list-card');
        if (comparisonCard) {
            ui.toggleComparisonSelection(comparisonCard);
            return;
        }
    });

    // --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –ü–û–õ–ï–ô –í–í–û–î–ê –§–ò–õ–¨–¢–†–û–í ---
    const lastNameFilter = document.getElementById('lastNameFilter');
    if (lastNameFilter) lastNameFilter.addEventListener('input', ui.applyFiltersAndRender);

    const firstNameFilter = document.getElementById('firstNameFilter');
    if (firstNameFilter) firstNameFilter.addEventListener('input', ui.applyFiltersAndRender);

    const fingerprintFilter = document.getElementById('fingerprintFilter');
    if (fingerprintFilter) fingerprintFilter.addEventListener('change', ui.applyFiltersAndRender);
    
    console.log("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.");
}


// =============================================================================
// BUSINESS LOGIC
// =============================================================================

async function runDetailedAnalysis() {
    const selectedIds = Array.from(selectedForComparison);

    // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (selectedIds.length < 1) {
        ui.showNotification("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.", "warning");
        return;
    }

    ui.showLoading();

    try {
        // --- –ì–õ–ê–í–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï ---
        // 1. –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–æ–º–∏—Å–æ–≤, –∑–∞–ø—Ä–∞—à–∏–≤–∞—è –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏
        const fetchPromises = selectedIds.map(id => apiClient.fetchFullResultDetails(id));

        // 2. –î–æ–∂–∏–¥–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∫–∏ –í–°–ï–• –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        const fullResults = (await Promise.all(fetchPromises)).filter(Boolean); // .filter(Boolean) —É–±–∏—Ä–∞–µ—Ç null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

        if (fullResults.length !== selectedIds.length) {
            ui.showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–¥–Ω–æ–π –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ—Å—Å–∏–π.", "danger");
        }

        let dtwResults = {}; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç DTW –ø—É—Å—Ç–æ–π

        // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–ø—É—Å–∫–∞–µ–º DTW-–∞–Ω–∞–ª–∏–∑, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ
        if (fullResults.length > 1) {
            const useServer = document.getElementById('serverAnalysisToggle')?.checked;
            if (useServer) {
                dtwResults = await apiClient.runServerDtwAnalysis(selectedIds);
            } else {
                dtwResults = await analysis.runClientDtwAnalysis(fullResults);
            }
        }

        if (dtwResults) {
            ui.renderComparisonResults(dtwResults, fullResults);
        } else {
            ui.showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å DTW –∞–Ω–∞–ª–∏–∑.", "danger");
        }

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:", error);
        ui.showNotification("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞.", "danger");
    } finally {
        ui.hideLoading();
    }
}

